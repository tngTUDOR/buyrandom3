# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = buyrandom3
version = file: buyrandom3/VERSION
description = Contains all the python boilerplate you need to create a Brightway ecosystem package.
author = Tomás NAVARRETE GUTIÉRREZ
maintainer = Tomás NAVARRETE GUTIÉRREZ
maintainer_email = <tngTUDOR@users.noreply.github.com>
author_email = <tngTUDOR@users.noreply.github.com>
license = MIT license
license_files = LICENSE
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
keywords= "brightway", "development"
url = https://github.com/tngTUDOR/buyrandom3
# Add here related links, for example:
project_urls =
	source = https://github.com/tngTUDOR/buyrandom3
	homepage = https://github.com/tngTUDOR/buyrandom3
	tracker = https://github.com/tngTUDOR/buyrandom3/issues

#    Conda-Forge = https://anaconda.org/conda-forge/buyrandom3
#    Download = https://pypi.org/project/buyrandom3/#files

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =buyrandom3

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
# pandas >=1.4
    click


[options.packages.find]
where = buyrandom3
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install samplepyscaffoldproject[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov

dev =
    pre-commit
    pylint
    sphinx
    click
    sphinx-click


[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = buyrandom3.module:function
# For example:
# console_scripts =
#     fibonacci = buyrandom3.skeleton:run
#
console_scripts =
     buyrandom3.cli = buyrandom3.cli:run



[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov buyrandom3 --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
